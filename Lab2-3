import java.util.Arrays;
import java.util.Random;
import java.util.Scanner;

public class MatrixColumnSort {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the size of the matrix (n): ");
        int n = scanner.nextInt();

        int[][] matrix = generateRandomMatrix(n);

        System.out.println("Original Matrix:");
        printMatrix(matrix);

        sortMatrixColumns(matrix);

        System.out.println("\nMatrix with Sorted Columns:");
        printMatrix(matrix);
    }

    private static int[][] generateRandomMatrix(int n) {
        int[][] matrix = new int[n][n];
        Random random = new Random();

        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                matrix[i][j] = random.nextInt(2 * n + 1) - n; 
            }
        }

        return matrix;
    }

    private static void printMatrix(int[][] matrix) {
        for (int[] row : matrix) {
            System.out.println(Arrays.toString(row));
        }
    }

    private static void sortMatrixColumns(int[][] matrix) {
        int columns = matrix[0].length;

        for (int col = 0; col < columns; col++) {
            for (int i = 0; i < columns - 1; i++) {
                int currentColumnSum = calculateColumnSum(matrix, i);
                int nextColumnSum = calculateColumnSum(matrix, i + 1);

                if (currentColumnSum < nextColumnSum) {
                    swapColumns(matrix, i, i + 1);
                }
            }
        }
    }

    private static int calculateColumnSum(int[][] matrix, int col) {
        int sum = 0;
        for (int[] row : matrix) {
            sum += row[col];
        }
        return sum;
    }

    private static void swapColumns(int[][] matrix, int col1, int col2) {
        for (int i = 0; i < matrix.length; i++) {
            int temp = matrix[i][col1];
            matrix[i][col1] = matrix[i][col2];
            matrix[i][col2] = temp;
        }
    }
}
