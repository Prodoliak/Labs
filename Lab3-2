public class Circle {
    private double radius;
    private double x;
    private double y;

    public Circle(double radius, double x, double y) {
        this.radius = radius;
        this.x = x;
        this.y = y;
    }

    public double getRadius() {
        return radius;
    }

    public void setRadius(double radius) {
        this.radius = radius;
    }

    public double getX() {
        return x;
    }

    public void setX(double x) {
        this.x = x;
    }

    public double getY() {
        return y;
    }

    public void setY(double y) {
        this.y = y;
    }

    public double calculateArea() {
        return Math.PI * Math.pow(radius, 2);
    }

    public double calculatePerimeter() {
        return 2 * Math.PI * radius;
    }

    public Circle add(Circle otherCircle) {
        double newRadius = this.radius + otherCircle.radius;
        double newX = this.x + otherCircle.x;
        double newY = this.y + otherCircle.y;
        return new Circle(newRadius, newX, newY);
    }

    public Circle subtract(Circle otherCircle) {
        double newRadius = Math.abs(this.radius - otherCircle.radius);
        double newX = Math.abs(this.x - otherCircle.x);
        double newY = Math.abs(this.y - otherCircle.y);
        return new Circle(newRadius, newX, newY);
    }

    public Circle multiply(double scalar) {
        double newRadius = this.radius * scalar;
        double newX = this.x * scalar;
        double newY = this.y * scalar;
        return new Circle(newRadius, newX, newY);
    }

    public Circle divide(double divisor) {
        if (divisor != 0) {
            double newRadius = this.radius / divisor;
            double newX = this.x / divisor;
            double newY = this.y / divisor;
            return new Circle(newRadius, newX, newY);
        } else {
            throw new IllegalArgumentException("Cannot divide by zero.");
        }
    }

    public String toString() {
        return "Circle{radius=" + radius + ", x=" + x + ", y=" + y + '}';
    }

    public static Circle[] createCircleArray() {
        Circle[] circles = new Circle[3];
        circles[0] = new Circle(5, 0, 0);
        circles[1] = new Circle(8, 2, 3);
        circles[2] = new Circle(3, -1, -2);
        return circles;
    }
}
